// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_test.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messages_5ftest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messages_5ftest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_5ftest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_5ftest_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_5ftest_2eproto;
namespace tutorial {
class protobuf_message_GENERAL;
struct protobuf_message_GENERALDefaultTypeInternal;
extern protobuf_message_GENERALDefaultTypeInternal _protobuf_message_GENERAL_default_instance_;
class protobuf_message_list_int;
struct protobuf_message_list_intDefaultTypeInternal;
extern protobuf_message_list_intDefaultTypeInternal _protobuf_message_list_int_default_instance_;
class protobuf_message_map_std_string_int;
struct protobuf_message_map_std_string_intDefaultTypeInternal;
extern protobuf_message_map_std_string_intDefaultTypeInternal _protobuf_message_map_std_string_int_default_instance_;
class protobuf_message_map_std_string_int_Value1Entry_DoNotUse;
struct protobuf_message_map_std_string_int_Value1Entry_DoNotUseDefaultTypeInternal;
extern protobuf_message_map_std_string_int_Value1Entry_DoNotUseDefaultTypeInternal _protobuf_message_map_std_string_int_Value1Entry_DoNotUse_default_instance_;
class protobuf_message_string;
struct protobuf_message_stringDefaultTypeInternal;
extern protobuf_message_stringDefaultTypeInternal _protobuf_message_string_default_instance_;
class protobuf_message_struct;
struct protobuf_message_structDefaultTypeInternal;
extern protobuf_message_structDefaultTypeInternal _protobuf_message_struct_default_instance_;
class protobuf_message_struct_Value5Entry_DoNotUse;
struct protobuf_message_struct_Value5Entry_DoNotUseDefaultTypeInternal;
extern protobuf_message_struct_Value5Entry_DoNotUseDefaultTypeInternal _protobuf_message_struct_Value5Entry_DoNotUse_default_instance_;
}  // namespace tutorial
PROTOBUF_NAMESPACE_OPEN
template<> ::tutorial::protobuf_message_GENERAL* Arena::CreateMaybeMessage<::tutorial::protobuf_message_GENERAL>(Arena*);
template<> ::tutorial::protobuf_message_list_int* Arena::CreateMaybeMessage<::tutorial::protobuf_message_list_int>(Arena*);
template<> ::tutorial::protobuf_message_map_std_string_int* Arena::CreateMaybeMessage<::tutorial::protobuf_message_map_std_string_int>(Arena*);
template<> ::tutorial::protobuf_message_map_std_string_int_Value1Entry_DoNotUse* Arena::CreateMaybeMessage<::tutorial::protobuf_message_map_std_string_int_Value1Entry_DoNotUse>(Arena*);
template<> ::tutorial::protobuf_message_string* Arena::CreateMaybeMessage<::tutorial::protobuf_message_string>(Arena*);
template<> ::tutorial::protobuf_message_struct* Arena::CreateMaybeMessage<::tutorial::protobuf_message_struct>(Arena*);
template<> ::tutorial::protobuf_message_struct_Value5Entry_DoNotUse* Arena::CreateMaybeMessage<::tutorial::protobuf_message_struct_Value5Entry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tutorial {

// ===================================================================

class protobuf_message_GENERAL final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tutorial.protobuf_message_GENERAL) */ {
 public:
  inline protobuf_message_GENERAL() : protobuf_message_GENERAL(nullptr) {}
  ~protobuf_message_GENERAL() override;
  explicit PROTOBUF_CONSTEXPR protobuf_message_GENERAL(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  protobuf_message_GENERAL(const protobuf_message_GENERAL& from);
  protobuf_message_GENERAL(protobuf_message_GENERAL&& from) noexcept
    : protobuf_message_GENERAL() {
    *this = ::std::move(from);
  }

  inline protobuf_message_GENERAL& operator=(const protobuf_message_GENERAL& from) {
    CopyFrom(from);
    return *this;
  }
  inline protobuf_message_GENERAL& operator=(protobuf_message_GENERAL&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const protobuf_message_GENERAL& default_instance() {
    return *internal_default_instance();
  }
  static inline const protobuf_message_GENERAL* internal_default_instance() {
    return reinterpret_cast<const protobuf_message_GENERAL*>(
               &_protobuf_message_GENERAL_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(protobuf_message_GENERAL& a, protobuf_message_GENERAL& b) {
    a.Swap(&b);
  }
  inline void Swap(protobuf_message_GENERAL* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(protobuf_message_GENERAL* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  protobuf_message_GENERAL* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<protobuf_message_GENERAL>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const protobuf_message_GENERAL& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const protobuf_message_GENERAL& from) {
    protobuf_message_GENERAL::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(protobuf_message_GENERAL* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tutorial.protobuf_message_GENERAL";
  }
  protected:
  explicit protobuf_message_GENERAL(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValue1FieldNumber = 1,
    kValue2FieldNumber = 2,
    kValue3FieldNumber = 3,
    kValue4FieldNumber = 4,
    kValue6FieldNumber = 6,
    kValue5FieldNumber = 5,
  };
  // sint32 value_1 = 1;
  void clear_value_1();
  int32_t value_1() const;
  void set_value_1(int32_t value);
  private:
  int32_t _internal_value_1() const;
  void _internal_set_value_1(int32_t value);
  public:

  // uint32 value_2 = 2;
  void clear_value_2();
  uint32_t value_2() const;
  void set_value_2(uint32_t value);
  private:
  uint32_t _internal_value_2() const;
  void _internal_set_value_2(uint32_t value);
  public:

  // sint64 value_3 = 3;
  void clear_value_3();
  int64_t value_3() const;
  void set_value_3(int64_t value);
  private:
  int64_t _internal_value_3() const;
  void _internal_set_value_3(int64_t value);
  public:

  // uint64 value_4 = 4;
  void clear_value_4();
  uint64_t value_4() const;
  void set_value_4(uint64_t value);
  private:
  uint64_t _internal_value_4() const;
  void _internal_set_value_4(uint64_t value);
  public:

  // double value_6 = 6;
  void clear_value_6();
  double value_6() const;
  void set_value_6(double value);
  private:
  double _internal_value_6() const;
  void _internal_set_value_6(double value);
  public:

  // float value_5 = 5;
  void clear_value_5();
  float value_5() const;
  void set_value_5(float value);
  private:
  float _internal_value_5() const;
  void _internal_set_value_5(float value);
  public:

  // @@protoc_insertion_point(class_scope:tutorial.protobuf_message_GENERAL)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t value_1_;
    uint32_t value_2_;
    int64_t value_3_;
    uint64_t value_4_;
    double value_6_;
    float value_5_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_5ftest_2eproto;
};
// -------------------------------------------------------------------

class protobuf_message_string final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tutorial.protobuf_message_string) */ {
 public:
  inline protobuf_message_string() : protobuf_message_string(nullptr) {}
  ~protobuf_message_string() override;
  explicit PROTOBUF_CONSTEXPR protobuf_message_string(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  protobuf_message_string(const protobuf_message_string& from);
  protobuf_message_string(protobuf_message_string&& from) noexcept
    : protobuf_message_string() {
    *this = ::std::move(from);
  }

  inline protobuf_message_string& operator=(const protobuf_message_string& from) {
    CopyFrom(from);
    return *this;
  }
  inline protobuf_message_string& operator=(protobuf_message_string&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const protobuf_message_string& default_instance() {
    return *internal_default_instance();
  }
  static inline const protobuf_message_string* internal_default_instance() {
    return reinterpret_cast<const protobuf_message_string*>(
               &_protobuf_message_string_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(protobuf_message_string& a, protobuf_message_string& b) {
    a.Swap(&b);
  }
  inline void Swap(protobuf_message_string* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(protobuf_message_string* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  protobuf_message_string* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<protobuf_message_string>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const protobuf_message_string& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const protobuf_message_string& from) {
    protobuf_message_string::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(protobuf_message_string* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tutorial.protobuf_message_string";
  }
  protected:
  explicit protobuf_message_string(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValue1FieldNumber = 1,
    kValue2FieldNumber = 2,
    kValue3FieldNumber = 3,
    kValue4FieldNumber = 4,
    kValue5FieldNumber = 5,
    kValue6FieldNumber = 6,
    kValue7FieldNumber = 7,
    kValue8FieldNumber = 8,
  };
  // bytes value_1 = 1;
  void clear_value_1();
  const std::string& value_1() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_1(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_1();
  PROTOBUF_NODISCARD std::string* release_value_1();
  void set_allocated_value_1(std::string* value_1);
  private:
  const std::string& _internal_value_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_1(const std::string& value);
  std::string* _internal_mutable_value_1();
  public:

  // bytes value_2 = 2;
  void clear_value_2();
  const std::string& value_2() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_2(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_2();
  PROTOBUF_NODISCARD std::string* release_value_2();
  void set_allocated_value_2(std::string* value_2);
  private:
  const std::string& _internal_value_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_2(const std::string& value);
  std::string* _internal_mutable_value_2();
  public:

  // bytes value_3 = 3;
  void clear_value_3();
  const std::string& value_3() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_3(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_3();
  PROTOBUF_NODISCARD std::string* release_value_3();
  void set_allocated_value_3(std::string* value_3);
  private:
  const std::string& _internal_value_3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_3(const std::string& value);
  std::string* _internal_mutable_value_3();
  public:

  // bytes value_4 = 4;
  void clear_value_4();
  const std::string& value_4() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_4(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_4();
  PROTOBUF_NODISCARD std::string* release_value_4();
  void set_allocated_value_4(std::string* value_4);
  private:
  const std::string& _internal_value_4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_4(const std::string& value);
  std::string* _internal_mutable_value_4();
  public:

  // bytes value_5 = 5;
  void clear_value_5();
  const std::string& value_5() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_5(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_5();
  PROTOBUF_NODISCARD std::string* release_value_5();
  void set_allocated_value_5(std::string* value_5);
  private:
  const std::string& _internal_value_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_5(const std::string& value);
  std::string* _internal_mutable_value_5();
  public:

  // bytes value_6 = 6;
  void clear_value_6();
  const std::string& value_6() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_6(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_6();
  PROTOBUF_NODISCARD std::string* release_value_6();
  void set_allocated_value_6(std::string* value_6);
  private:
  const std::string& _internal_value_6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_6(const std::string& value);
  std::string* _internal_mutable_value_6();
  public:

  // bytes value_7 = 7;
  void clear_value_7();
  const std::string& value_7() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_7(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_7();
  PROTOBUF_NODISCARD std::string* release_value_7();
  void set_allocated_value_7(std::string* value_7);
  private:
  const std::string& _internal_value_7() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_7(const std::string& value);
  std::string* _internal_mutable_value_7();
  public:

  // bytes value_8 = 8;
  void clear_value_8();
  const std::string& value_8() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_8(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_8();
  PROTOBUF_NODISCARD std::string* release_value_8();
  void set_allocated_value_8(std::string* value_8);
  private:
  const std::string& _internal_value_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_8(const std::string& value);
  std::string* _internal_mutable_value_8();
  public:

  // @@protoc_insertion_point(class_scope:tutorial.protobuf_message_string)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_1_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_2_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_3_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_4_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_5_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_6_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_7_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_8_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_5ftest_2eproto;
};
// -------------------------------------------------------------------

class protobuf_message_list_int final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tutorial.protobuf_message_list_int) */ {
 public:
  inline protobuf_message_list_int() : protobuf_message_list_int(nullptr) {}
  ~protobuf_message_list_int() override;
  explicit PROTOBUF_CONSTEXPR protobuf_message_list_int(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  protobuf_message_list_int(const protobuf_message_list_int& from);
  protobuf_message_list_int(protobuf_message_list_int&& from) noexcept
    : protobuf_message_list_int() {
    *this = ::std::move(from);
  }

  inline protobuf_message_list_int& operator=(const protobuf_message_list_int& from) {
    CopyFrom(from);
    return *this;
  }
  inline protobuf_message_list_int& operator=(protobuf_message_list_int&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const protobuf_message_list_int& default_instance() {
    return *internal_default_instance();
  }
  static inline const protobuf_message_list_int* internal_default_instance() {
    return reinterpret_cast<const protobuf_message_list_int*>(
               &_protobuf_message_list_int_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(protobuf_message_list_int& a, protobuf_message_list_int& b) {
    a.Swap(&b);
  }
  inline void Swap(protobuf_message_list_int* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(protobuf_message_list_int* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  protobuf_message_list_int* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<protobuf_message_list_int>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const protobuf_message_list_int& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const protobuf_message_list_int& from) {
    protobuf_message_list_int::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(protobuf_message_list_int* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tutorial.protobuf_message_list_int";
  }
  protected:
  explicit protobuf_message_list_int(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValue1FieldNumber = 1,
  };
  // repeated int32 value_1 = 1;
  int value_1_size() const;
  private:
  int _internal_value_1_size() const;
  public:
  void clear_value_1();
  private:
  int32_t _internal_value_1(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_value_1() const;
  void _internal_add_value_1(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_value_1();
  public:
  int32_t value_1(int index) const;
  void set_value_1(int index, int32_t value);
  void add_value_1(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      value_1() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_value_1();

  // @@protoc_insertion_point(class_scope:tutorial.protobuf_message_list_int)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > value_1_;
    mutable std::atomic<int> _value_1_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_5ftest_2eproto;
};
// -------------------------------------------------------------------

class protobuf_message_map_std_string_int_Value1Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<protobuf_message_map_std_string_int_Value1Entry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<protobuf_message_map_std_string_int_Value1Entry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  protobuf_message_map_std_string_int_Value1Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR protobuf_message_map_std_string_int_Value1Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit protobuf_message_map_std_string_int_Value1Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const protobuf_message_map_std_string_int_Value1Entry_DoNotUse& other);
  static const protobuf_message_map_std_string_int_Value1Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const protobuf_message_map_std_string_int_Value1Entry_DoNotUse*>(&_protobuf_message_map_std_string_int_Value1Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "tutorial.protobuf_message_map_std_string_int.Value1Entry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_messages_5ftest_2eproto;
};

// -------------------------------------------------------------------

class protobuf_message_map_std_string_int final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tutorial.protobuf_message_map_std_string_int) */ {
 public:
  inline protobuf_message_map_std_string_int() : protobuf_message_map_std_string_int(nullptr) {}
  ~protobuf_message_map_std_string_int() override;
  explicit PROTOBUF_CONSTEXPR protobuf_message_map_std_string_int(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  protobuf_message_map_std_string_int(const protobuf_message_map_std_string_int& from);
  protobuf_message_map_std_string_int(protobuf_message_map_std_string_int&& from) noexcept
    : protobuf_message_map_std_string_int() {
    *this = ::std::move(from);
  }

  inline protobuf_message_map_std_string_int& operator=(const protobuf_message_map_std_string_int& from) {
    CopyFrom(from);
    return *this;
  }
  inline protobuf_message_map_std_string_int& operator=(protobuf_message_map_std_string_int&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const protobuf_message_map_std_string_int& default_instance() {
    return *internal_default_instance();
  }
  static inline const protobuf_message_map_std_string_int* internal_default_instance() {
    return reinterpret_cast<const protobuf_message_map_std_string_int*>(
               &_protobuf_message_map_std_string_int_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(protobuf_message_map_std_string_int& a, protobuf_message_map_std_string_int& b) {
    a.Swap(&b);
  }
  inline void Swap(protobuf_message_map_std_string_int* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(protobuf_message_map_std_string_int* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  protobuf_message_map_std_string_int* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<protobuf_message_map_std_string_int>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const protobuf_message_map_std_string_int& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const protobuf_message_map_std_string_int& from) {
    protobuf_message_map_std_string_int::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(protobuf_message_map_std_string_int* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tutorial.protobuf_message_map_std_string_int";
  }
  protected:
  explicit protobuf_message_map_std_string_int(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kValue1FieldNumber = 1,
  };
  // map<string, int32> value_1 = 1;
  int value_1_size() const;
  private:
  int _internal_value_1_size() const;
  public:
  void clear_value_1();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      _internal_value_1() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      _internal_mutable_value_1();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      value_1() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      mutable_value_1();

  // @@protoc_insertion_point(class_scope:tutorial.protobuf_message_map_std_string_int)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        protobuf_message_map_std_string_int_Value1Entry_DoNotUse,
        std::string, int32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> value_1_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_5ftest_2eproto;
};
// -------------------------------------------------------------------

class protobuf_message_struct_Value5Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<protobuf_message_struct_Value5Entry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<protobuf_message_struct_Value5Entry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  protobuf_message_struct_Value5Entry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR protobuf_message_struct_Value5Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit protobuf_message_struct_Value5Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const protobuf_message_struct_Value5Entry_DoNotUse& other);
  static const protobuf_message_struct_Value5Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const protobuf_message_struct_Value5Entry_DoNotUse*>(&_protobuf_message_struct_Value5Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "tutorial.protobuf_message_struct.Value5Entry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_messages_5ftest_2eproto;
};

// -------------------------------------------------------------------

class protobuf_message_struct final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tutorial.protobuf_message_struct) */ {
 public:
  inline protobuf_message_struct() : protobuf_message_struct(nullptr) {}
  ~protobuf_message_struct() override;
  explicit PROTOBUF_CONSTEXPR protobuf_message_struct(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  protobuf_message_struct(const protobuf_message_struct& from);
  protobuf_message_struct(protobuf_message_struct&& from) noexcept
    : protobuf_message_struct() {
    *this = ::std::move(from);
  }

  inline protobuf_message_struct& operator=(const protobuf_message_struct& from) {
    CopyFrom(from);
    return *this;
  }
  inline protobuf_message_struct& operator=(protobuf_message_struct&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const protobuf_message_struct& default_instance() {
    return *internal_default_instance();
  }
  static inline const protobuf_message_struct* internal_default_instance() {
    return reinterpret_cast<const protobuf_message_struct*>(
               &_protobuf_message_struct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(protobuf_message_struct& a, protobuf_message_struct& b) {
    a.Swap(&b);
  }
  inline void Swap(protobuf_message_struct* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(protobuf_message_struct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  protobuf_message_struct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<protobuf_message_struct>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const protobuf_message_struct& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const protobuf_message_struct& from) {
    protobuf_message_struct::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(protobuf_message_struct* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tutorial.protobuf_message_struct";
  }
  protected:
  explicit protobuf_message_struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kValue3FieldNumber = 3,
    kValue5FieldNumber = 5,
    kValue2FieldNumber = 2,
    kValue4FieldNumber = 4,
    kValue1FieldNumber = 1,
  };
  // repeated int32 value_3 = 3;
  int value_3_size() const;
  private:
  int _internal_value_3_size() const;
  public:
  void clear_value_3();
  private:
  int32_t _internal_value_3(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_value_3() const;
  void _internal_add_value_3(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_value_3();
  public:
  int32_t value_3(int index) const;
  void set_value_3(int index, int32_t value);
  void add_value_3(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      value_3() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_value_3();

  // map<string, int32> value_5 = 5;
  int value_5_size() const;
  private:
  int _internal_value_5_size() const;
  public:
  void clear_value_5();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      _internal_value_5() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      _internal_mutable_value_5();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      value_5() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      mutable_value_5();

  // bytes value_2 = 2;
  void clear_value_2();
  const std::string& value_2() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_2(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_2();
  PROTOBUF_NODISCARD std::string* release_value_2();
  void set_allocated_value_2(std::string* value_2);
  private:
  const std::string& _internal_value_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_2(const std::string& value);
  std::string* _internal_mutable_value_2();
  public:

  // uint64 value_4 = 4;
  void clear_value_4();
  uint64_t value_4() const;
  void set_value_4(uint64_t value);
  private:
  uint64_t _internal_value_4() const;
  void _internal_set_value_4(uint64_t value);
  public:

  // sint32 value_1 = 1;
  void clear_value_1();
  int32_t value_1() const;
  void set_value_1(int32_t value);
  private:
  int32_t _internal_value_1() const;
  void _internal_set_value_1(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:tutorial.protobuf_message_struct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > value_3_;
    mutable std::atomic<int> _value_3_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        protobuf_message_struct_Value5Entry_DoNotUse,
        std::string, int32_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> value_5_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_2_;
    uint64_t value_4_;
    int32_t value_1_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_5ftest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// protobuf_message_GENERAL

// sint32 value_1 = 1;
inline void protobuf_message_GENERAL::clear_value_1() {
  _impl_.value_1_ = 0;
}
inline int32_t protobuf_message_GENERAL::_internal_value_1() const {
  return _impl_.value_1_;
}
inline int32_t protobuf_message_GENERAL::value_1() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_1)
  return _internal_value_1();
}
inline void protobuf_message_GENERAL::_internal_set_value_1(int32_t value) {
  
  _impl_.value_1_ = value;
}
inline void protobuf_message_GENERAL::set_value_1(int32_t value) {
  _internal_set_value_1(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_1)
}

// uint32 value_2 = 2;
inline void protobuf_message_GENERAL::clear_value_2() {
  _impl_.value_2_ = 0u;
}
inline uint32_t protobuf_message_GENERAL::_internal_value_2() const {
  return _impl_.value_2_;
}
inline uint32_t protobuf_message_GENERAL::value_2() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_2)
  return _internal_value_2();
}
inline void protobuf_message_GENERAL::_internal_set_value_2(uint32_t value) {
  
  _impl_.value_2_ = value;
}
inline void protobuf_message_GENERAL::set_value_2(uint32_t value) {
  _internal_set_value_2(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_2)
}

// sint64 value_3 = 3;
inline void protobuf_message_GENERAL::clear_value_3() {
  _impl_.value_3_ = int64_t{0};
}
inline int64_t protobuf_message_GENERAL::_internal_value_3() const {
  return _impl_.value_3_;
}
inline int64_t protobuf_message_GENERAL::value_3() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_3)
  return _internal_value_3();
}
inline void protobuf_message_GENERAL::_internal_set_value_3(int64_t value) {
  
  _impl_.value_3_ = value;
}
inline void protobuf_message_GENERAL::set_value_3(int64_t value) {
  _internal_set_value_3(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_3)
}

// uint64 value_4 = 4;
inline void protobuf_message_GENERAL::clear_value_4() {
  _impl_.value_4_ = uint64_t{0u};
}
inline uint64_t protobuf_message_GENERAL::_internal_value_4() const {
  return _impl_.value_4_;
}
inline uint64_t protobuf_message_GENERAL::value_4() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_4)
  return _internal_value_4();
}
inline void protobuf_message_GENERAL::_internal_set_value_4(uint64_t value) {
  
  _impl_.value_4_ = value;
}
inline void protobuf_message_GENERAL::set_value_4(uint64_t value) {
  _internal_set_value_4(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_4)
}

// float value_5 = 5;
inline void protobuf_message_GENERAL::clear_value_5() {
  _impl_.value_5_ = 0;
}
inline float protobuf_message_GENERAL::_internal_value_5() const {
  return _impl_.value_5_;
}
inline float protobuf_message_GENERAL::value_5() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_5)
  return _internal_value_5();
}
inline void protobuf_message_GENERAL::_internal_set_value_5(float value) {
  
  _impl_.value_5_ = value;
}
inline void protobuf_message_GENERAL::set_value_5(float value) {
  _internal_set_value_5(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_5)
}

// double value_6 = 6;
inline void protobuf_message_GENERAL::clear_value_6() {
  _impl_.value_6_ = 0;
}
inline double protobuf_message_GENERAL::_internal_value_6() const {
  return _impl_.value_6_;
}
inline double protobuf_message_GENERAL::value_6() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_GENERAL.value_6)
  return _internal_value_6();
}
inline void protobuf_message_GENERAL::_internal_set_value_6(double value) {
  
  _impl_.value_6_ = value;
}
inline void protobuf_message_GENERAL::set_value_6(double value) {
  _internal_set_value_6(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_GENERAL.value_6)
}

// -------------------------------------------------------------------

// protobuf_message_string

// bytes value_1 = 1;
inline void protobuf_message_string::clear_value_1() {
  _impl_.value_1_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_1() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_1)
  return _internal_value_1();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_1(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_1_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_1)
}
inline std::string* protobuf_message_string::mutable_value_1() {
  std::string* _s = _internal_mutable_value_1();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_1)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_1() const {
  return _impl_.value_1_.Get();
}
inline void protobuf_message_string::_internal_set_value_1(const std::string& value) {
  
  _impl_.value_1_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_1() {
  
  return _impl_.value_1_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_1() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_1)
  return _impl_.value_1_.Release();
}
inline void protobuf_message_string::set_allocated_value_1(std::string* value_1) {
  if (value_1 != nullptr) {
    
  } else {
    
  }
  _impl_.value_1_.SetAllocated(value_1, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_1_.IsDefault()) {
    _impl_.value_1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_1)
}

// bytes value_2 = 2;
inline void protobuf_message_string::clear_value_2() {
  _impl_.value_2_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_2() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_2)
  return _internal_value_2();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_2(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_2_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_2)
}
inline std::string* protobuf_message_string::mutable_value_2() {
  std::string* _s = _internal_mutable_value_2();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_2)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_2() const {
  return _impl_.value_2_.Get();
}
inline void protobuf_message_string::_internal_set_value_2(const std::string& value) {
  
  _impl_.value_2_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_2() {
  
  return _impl_.value_2_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_2() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_2)
  return _impl_.value_2_.Release();
}
inline void protobuf_message_string::set_allocated_value_2(std::string* value_2) {
  if (value_2 != nullptr) {
    
  } else {
    
  }
  _impl_.value_2_.SetAllocated(value_2, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_2_.IsDefault()) {
    _impl_.value_2_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_2)
}

// bytes value_3 = 3;
inline void protobuf_message_string::clear_value_3() {
  _impl_.value_3_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_3() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_3)
  return _internal_value_3();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_3(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_3_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_3)
}
inline std::string* protobuf_message_string::mutable_value_3() {
  std::string* _s = _internal_mutable_value_3();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_3)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_3() const {
  return _impl_.value_3_.Get();
}
inline void protobuf_message_string::_internal_set_value_3(const std::string& value) {
  
  _impl_.value_3_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_3() {
  
  return _impl_.value_3_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_3() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_3)
  return _impl_.value_3_.Release();
}
inline void protobuf_message_string::set_allocated_value_3(std::string* value_3) {
  if (value_3 != nullptr) {
    
  } else {
    
  }
  _impl_.value_3_.SetAllocated(value_3, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_3_.IsDefault()) {
    _impl_.value_3_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_3)
}

// bytes value_4 = 4;
inline void protobuf_message_string::clear_value_4() {
  _impl_.value_4_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_4() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_4)
  return _internal_value_4();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_4(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_4_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_4)
}
inline std::string* protobuf_message_string::mutable_value_4() {
  std::string* _s = _internal_mutable_value_4();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_4)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_4() const {
  return _impl_.value_4_.Get();
}
inline void protobuf_message_string::_internal_set_value_4(const std::string& value) {
  
  _impl_.value_4_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_4() {
  
  return _impl_.value_4_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_4() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_4)
  return _impl_.value_4_.Release();
}
inline void protobuf_message_string::set_allocated_value_4(std::string* value_4) {
  if (value_4 != nullptr) {
    
  } else {
    
  }
  _impl_.value_4_.SetAllocated(value_4, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_4_.IsDefault()) {
    _impl_.value_4_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_4)
}

// bytes value_5 = 5;
inline void protobuf_message_string::clear_value_5() {
  _impl_.value_5_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_5() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_5)
  return _internal_value_5();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_5(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_5_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_5)
}
inline std::string* protobuf_message_string::mutable_value_5() {
  std::string* _s = _internal_mutable_value_5();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_5)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_5() const {
  return _impl_.value_5_.Get();
}
inline void protobuf_message_string::_internal_set_value_5(const std::string& value) {
  
  _impl_.value_5_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_5() {
  
  return _impl_.value_5_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_5() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_5)
  return _impl_.value_5_.Release();
}
inline void protobuf_message_string::set_allocated_value_5(std::string* value_5) {
  if (value_5 != nullptr) {
    
  } else {
    
  }
  _impl_.value_5_.SetAllocated(value_5, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_5_.IsDefault()) {
    _impl_.value_5_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_5)
}

// bytes value_6 = 6;
inline void protobuf_message_string::clear_value_6() {
  _impl_.value_6_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_6() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_6)
  return _internal_value_6();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_6(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_6_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_6)
}
inline std::string* protobuf_message_string::mutable_value_6() {
  std::string* _s = _internal_mutable_value_6();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_6)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_6() const {
  return _impl_.value_6_.Get();
}
inline void protobuf_message_string::_internal_set_value_6(const std::string& value) {
  
  _impl_.value_6_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_6() {
  
  return _impl_.value_6_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_6() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_6)
  return _impl_.value_6_.Release();
}
inline void protobuf_message_string::set_allocated_value_6(std::string* value_6) {
  if (value_6 != nullptr) {
    
  } else {
    
  }
  _impl_.value_6_.SetAllocated(value_6, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_6_.IsDefault()) {
    _impl_.value_6_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_6)
}

// bytes value_7 = 7;
inline void protobuf_message_string::clear_value_7() {
  _impl_.value_7_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_7() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_7)
  return _internal_value_7();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_7(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_7_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_7)
}
inline std::string* protobuf_message_string::mutable_value_7() {
  std::string* _s = _internal_mutable_value_7();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_7)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_7() const {
  return _impl_.value_7_.Get();
}
inline void protobuf_message_string::_internal_set_value_7(const std::string& value) {
  
  _impl_.value_7_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_7() {
  
  return _impl_.value_7_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_7() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_7)
  return _impl_.value_7_.Release();
}
inline void protobuf_message_string::set_allocated_value_7(std::string* value_7) {
  if (value_7 != nullptr) {
    
  } else {
    
  }
  _impl_.value_7_.SetAllocated(value_7, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_7_.IsDefault()) {
    _impl_.value_7_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_7)
}

// bytes value_8 = 8;
inline void protobuf_message_string::clear_value_8() {
  _impl_.value_8_.ClearToEmpty();
}
inline const std::string& protobuf_message_string::value_8() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_string.value_8)
  return _internal_value_8();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_string::set_value_8(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_8_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_string.value_8)
}
inline std::string* protobuf_message_string::mutable_value_8() {
  std::string* _s = _internal_mutable_value_8();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_string.value_8)
  return _s;
}
inline const std::string& protobuf_message_string::_internal_value_8() const {
  return _impl_.value_8_.Get();
}
inline void protobuf_message_string::_internal_set_value_8(const std::string& value) {
  
  _impl_.value_8_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_string::_internal_mutable_value_8() {
  
  return _impl_.value_8_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_string::release_value_8() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_string.value_8)
  return _impl_.value_8_.Release();
}
inline void protobuf_message_string::set_allocated_value_8(std::string* value_8) {
  if (value_8 != nullptr) {
    
  } else {
    
  }
  _impl_.value_8_.SetAllocated(value_8, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_8_.IsDefault()) {
    _impl_.value_8_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_string.value_8)
}

// -------------------------------------------------------------------

// protobuf_message_list_int

// repeated int32 value_1 = 1;
inline int protobuf_message_list_int::_internal_value_1_size() const {
  return _impl_.value_1_.size();
}
inline int protobuf_message_list_int::value_1_size() const {
  return _internal_value_1_size();
}
inline void protobuf_message_list_int::clear_value_1() {
  _impl_.value_1_.Clear();
}
inline int32_t protobuf_message_list_int::_internal_value_1(int index) const {
  return _impl_.value_1_.Get(index);
}
inline int32_t protobuf_message_list_int::value_1(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_list_int.value_1)
  return _internal_value_1(index);
}
inline void protobuf_message_list_int::set_value_1(int index, int32_t value) {
  _impl_.value_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_list_int.value_1)
}
inline void protobuf_message_list_int::_internal_add_value_1(int32_t value) {
  _impl_.value_1_.Add(value);
}
inline void protobuf_message_list_int::add_value_1(int32_t value) {
  _internal_add_value_1(value);
  // @@protoc_insertion_point(field_add:tutorial.protobuf_message_list_int.value_1)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
protobuf_message_list_int::_internal_value_1() const {
  return _impl_.value_1_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
protobuf_message_list_int::value_1() const {
  // @@protoc_insertion_point(field_list:tutorial.protobuf_message_list_int.value_1)
  return _internal_value_1();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
protobuf_message_list_int::_internal_mutable_value_1() {
  return &_impl_.value_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
protobuf_message_list_int::mutable_value_1() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.protobuf_message_list_int.value_1)
  return _internal_mutable_value_1();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// protobuf_message_map_std_string_int

// map<string, int32> value_1 = 1;
inline int protobuf_message_map_std_string_int::_internal_value_1_size() const {
  return _impl_.value_1_.size();
}
inline int protobuf_message_map_std_string_int::value_1_size() const {
  return _internal_value_1_size();
}
inline void protobuf_message_map_std_string_int::clear_value_1() {
  _impl_.value_1_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
protobuf_message_map_std_string_int::_internal_value_1() const {
  return _impl_.value_1_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
protobuf_message_map_std_string_int::value_1() const {
  // @@protoc_insertion_point(field_map:tutorial.protobuf_message_map_std_string_int.value_1)
  return _internal_value_1();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
protobuf_message_map_std_string_int::_internal_mutable_value_1() {
  return _impl_.value_1_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
protobuf_message_map_std_string_int::mutable_value_1() {
  // @@protoc_insertion_point(field_mutable_map:tutorial.protobuf_message_map_std_string_int.value_1)
  return _internal_mutable_value_1();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// protobuf_message_struct

// sint32 value_1 = 1;
inline void protobuf_message_struct::clear_value_1() {
  _impl_.value_1_ = 0;
}
inline int32_t protobuf_message_struct::_internal_value_1() const {
  return _impl_.value_1_;
}
inline int32_t protobuf_message_struct::value_1() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_struct.value_1)
  return _internal_value_1();
}
inline void protobuf_message_struct::_internal_set_value_1(int32_t value) {
  
  _impl_.value_1_ = value;
}
inline void protobuf_message_struct::set_value_1(int32_t value) {
  _internal_set_value_1(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_struct.value_1)
}

// bytes value_2 = 2;
inline void protobuf_message_struct::clear_value_2() {
  _impl_.value_2_.ClearToEmpty();
}
inline const std::string& protobuf_message_struct::value_2() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_struct.value_2)
  return _internal_value_2();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void protobuf_message_struct::set_value_2(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_2_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_struct.value_2)
}
inline std::string* protobuf_message_struct::mutable_value_2() {
  std::string* _s = _internal_mutable_value_2();
  // @@protoc_insertion_point(field_mutable:tutorial.protobuf_message_struct.value_2)
  return _s;
}
inline const std::string& protobuf_message_struct::_internal_value_2() const {
  return _impl_.value_2_.Get();
}
inline void protobuf_message_struct::_internal_set_value_2(const std::string& value) {
  
  _impl_.value_2_.Set(value, GetArenaForAllocation());
}
inline std::string* protobuf_message_struct::_internal_mutable_value_2() {
  
  return _impl_.value_2_.Mutable(GetArenaForAllocation());
}
inline std::string* protobuf_message_struct::release_value_2() {
  // @@protoc_insertion_point(field_release:tutorial.protobuf_message_struct.value_2)
  return _impl_.value_2_.Release();
}
inline void protobuf_message_struct::set_allocated_value_2(std::string* value_2) {
  if (value_2 != nullptr) {
    
  } else {
    
  }
  _impl_.value_2_.SetAllocated(value_2, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_2_.IsDefault()) {
    _impl_.value_2_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tutorial.protobuf_message_struct.value_2)
}

// repeated int32 value_3 = 3;
inline int protobuf_message_struct::_internal_value_3_size() const {
  return _impl_.value_3_.size();
}
inline int protobuf_message_struct::value_3_size() const {
  return _internal_value_3_size();
}
inline void protobuf_message_struct::clear_value_3() {
  _impl_.value_3_.Clear();
}
inline int32_t protobuf_message_struct::_internal_value_3(int index) const {
  return _impl_.value_3_.Get(index);
}
inline int32_t protobuf_message_struct::value_3(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_struct.value_3)
  return _internal_value_3(index);
}
inline void protobuf_message_struct::set_value_3(int index, int32_t value) {
  _impl_.value_3_.Set(index, value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_struct.value_3)
}
inline void protobuf_message_struct::_internal_add_value_3(int32_t value) {
  _impl_.value_3_.Add(value);
}
inline void protobuf_message_struct::add_value_3(int32_t value) {
  _internal_add_value_3(value);
  // @@protoc_insertion_point(field_add:tutorial.protobuf_message_struct.value_3)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
protobuf_message_struct::_internal_value_3() const {
  return _impl_.value_3_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
protobuf_message_struct::value_3() const {
  // @@protoc_insertion_point(field_list:tutorial.protobuf_message_struct.value_3)
  return _internal_value_3();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
protobuf_message_struct::_internal_mutable_value_3() {
  return &_impl_.value_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
protobuf_message_struct::mutable_value_3() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.protobuf_message_struct.value_3)
  return _internal_mutable_value_3();
}

// uint64 value_4 = 4;
inline void protobuf_message_struct::clear_value_4() {
  _impl_.value_4_ = uint64_t{0u};
}
inline uint64_t protobuf_message_struct::_internal_value_4() const {
  return _impl_.value_4_;
}
inline uint64_t protobuf_message_struct::value_4() const {
  // @@protoc_insertion_point(field_get:tutorial.protobuf_message_struct.value_4)
  return _internal_value_4();
}
inline void protobuf_message_struct::_internal_set_value_4(uint64_t value) {
  
  _impl_.value_4_ = value;
}
inline void protobuf_message_struct::set_value_4(uint64_t value) {
  _internal_set_value_4(value);
  // @@protoc_insertion_point(field_set:tutorial.protobuf_message_struct.value_4)
}

// map<string, int32> value_5 = 5;
inline int protobuf_message_struct::_internal_value_5_size() const {
  return _impl_.value_5_.size();
}
inline int protobuf_message_struct::value_5_size() const {
  return _internal_value_5_size();
}
inline void protobuf_message_struct::clear_value_5() {
  _impl_.value_5_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
protobuf_message_struct::_internal_value_5() const {
  return _impl_.value_5_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
protobuf_message_struct::value_5() const {
  // @@protoc_insertion_point(field_map:tutorial.protobuf_message_struct.value_5)
  return _internal_value_5();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
protobuf_message_struct::_internal_mutable_value_5() {
  return _impl_.value_5_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
protobuf_message_struct::mutable_value_5() {
  // @@protoc_insertion_point(field_mutable_map:tutorial.protobuf_message_struct.value_5)
  return _internal_mutable_value_5();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messages_5ftest_2eproto
